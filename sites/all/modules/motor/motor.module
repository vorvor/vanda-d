<?php

function motor_menu() {
  $items = array();

  $items['add-event'] = array(
    'title' => 'Add event',
    'description' => 'A form to mess around with.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('motor_form'),
    'access callback' => TRUE,
    'type'=>MENU_NORMAL_ITEM,
    'menu_name'=>'main-menu',
  );

  return $items;
}


function motor_form($form, &$form_state) {
	
	//drupal_add_js('https://code.jquery.com/jquery-1.12.3.min.js', 'external');
	drupal_add_js('http://momentjs.com/downloads/moment-with-locales.min.js', 'external');
  //drupal_add_js('https://code.jquery.com/ui/1.12.1/jquery-ui.js', 'external');
  //drupal_add_js('sites/all/libraries/jquery.ui.touch-punch/js/jquery.ui.touch-punch.min.js', 'header');
  //drupal_add_js('https://code.jquery.com/ui/1.12.1/jquery-ui.js', 'external');


  
	
	
	//drupal_add_js(drupal_get_path('module', 'motor') . '/motor.js');
  drupal_add_js(drupal_get_path('module', 'motor') . '/js/bootstrap-material-datetimepicker.js');

  drupal_add_css('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css', 'external');
  drupal_add_css('https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css', 'external');
  drupal_add_css(drupal_get_path('module', 'motor') . '/js/bootstrap-material-datetimepicker.css');



  
  $form['time'] = array(
    '#type'=>'textfield',
    '#required' => TRUE,
    '#attributes' => array('id' => array('time')),
  );

  $form['time_buttons'] = array(
    '#markup'=>'<div>
				<input type="button" value="-" class="change" data-val="-1" data-dest="time">
				<input type="button" value="+" class="change" data-val="1" data-dest="time"> 
        <input type="button" value="now" class="change" data-dest="time">
			</div>',
  );

  $form['hour_slider'] = array(
    '#markup' => '<div id="slider-hour">
      <div id="custom-handle" class="ui-slider-handle"></div>
    </div>',
  );

  $form['min_slider'] = array(
    '#markup' => '<div id="slider-min">
      <div id="custom-handle" class="ui-slider-handle"></div>
    </div>',
  );

  $form['amount'] = array(
    '#type'=>'textfield',
    '#required' => TRUE,
    '#attributes' => array('id' => array('amount'), 'data-default' => array(1)),
  );

  $form['amount_buttons'] = array(
    '#markup'=> '<div>
				<input type="button" value="-10" class="change" data-val="-10" data-dest="amount">
				<input type="button" value="-1" class="change" data-val="-1" data-dest="amount">
				<input type="button" value="+1" class="change" data-val="1" data-dest="amount"> 
				<input type="button" value="+10" class="change" data-val="10" data-dest="amount">
				<input type="button" value="+100" class="change" data-val="100" data-dest="amount">
        <input type="button" value="+1000" class="change" data-val="1000" data-dest="amount">
				<input type="button" value="reset" class="reset" data-dest="amount">
			</div>',
  );

  $form['event'] = array(
    '#type'=>'textfield',
    '#required' => TRUE,
    '#attributes' => array('id' => array('event')),
  );

  $form['event_tid'] = array(
    '#type'=>'hidden',
    '#attributes' => array('id' => array('event-tid')),
  );

  $vocabulary = taxonomy_vocabulary_machine_name_load('events');
  $terms = entity_load('taxonomy_term', FALSE, array('vid' => $vocabulary->vid));

  $output = '';
  foreach ($terms as $term) {
    $output .= '<input type="button" value="" class="change-event" data-tid="'  . $term->tid .  '" data-val="' . $term->name . '" data-dest="event">';
  }

  $form['event_buttons'] = array(
    '#markup'=> '<div>' . $output . '<input type="button" value="" class="change-event" data-val="egyÃ©b" data-dest="event"></div>',
  );


  $form['submit'] = array(
    '#type'=>'submit',
    '#value'=>t('Save!'),
  );

  

  $form['#attached']['js'][] = array(
    'data' => 'https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js',
    'type' => 'file', 
  );

  $form['#attached']['js'][] = array(
    'data' => 'https://code.jquery.com/ui/1.12.1/jquery-ui.js',
    'type' => 'file', 
  );
  
  $form['#attached']['js'][] = array(
    'data' => drupal_get_path('module', 'motor') . '/js/jquery.ui.touch-punch.min.js',
    'type' => 'file', 
  );

  $form['#attached']['js'][] = array(
    'data' => drupal_get_path('module', 'motor') . '/js/bootstrap-material-datetimepicker.js',
    'type' => 'file', 
  );

  $form['#attached']['js'][] = array(
    'data' => drupal_get_path('module', 'motor') . '/motor.js',
    'type' => 'file', 
  );

  

  return $form;
}

function form_example_form_validate($form, &$form_state) {
}

function motor_form_submit($form, &$form_state) {
	$values = array(
    'type' => 'event',
    'uid' => 1,
    'status' => 1,
    'comment' => 1,
    'promote' => 0,
  );

  $entity = entity_create('node', $values);
  $ewrapper = entity_metadata_wrapper('node', $entity);

  //$ewrapper->title->set($desc_ass['title']);
  $ewrapper->title->set('test');
  $ewrapper->field_datetime->set(strtotime(date('Y-m-d ') . $form_state['values']['time']));
  $ewrapper->field_amount->set($form_state['values']['amount']);
  if (!empty($form_state['values']['event_tid'])) {
    $ewrapper->field_event->set($form_state['values']['event_tid']);
  } else {
  	$term = new stdClass();
	$term->name = $form_state['values']['event'];
	$vocabulary = taxonomy_vocabulary_machine_name_load('events');
	$term->vid = $vocabulary->vid;
	taxonomy_term_save($term);
  	$ewrapper->field_event->set($term->tid);
  }
  

  $nid = $ewrapper->save();
}

function motor_block_info() {
  $blocks = array();
  $blocks['charts'] = array(
    'info' => t('Charts'),
  );
  
  return $blocks;
}

function motor_block_view($delta='') {
  $block = array();
  
  switch($delta) {
    case 'charts' :
      $block['content'] = motor_charts();
      break;
  }
  
  return $block;
}

function motor_charts() {
  $term = taxonomy_get_term_by_name('Sns tej');
  $term = reset($term);
  dpm($term);
  $rows = views_get_view_result('event_chart', 'block');

  $data = [];
  foreach ($rows as $row) {
    $key = date('Y-m-d', $row->field_field_datetime[0]['raw']['value']);
    if (isset($data[$key])) {
      $data[$key] += $row->field_field_amount[0]['raw']['value'];
    }    
    else {
      $data[$key] = $row->field_field_amount[0]['raw']['value'];
    }
  }

  $output = '';
  foreach ($data as $date=>$amount) {
    $block = '<div class="cblock">
      <div class="cblock-top">
        <div class="cblock-bar" style="height:' . ($amount/100) . 'px">' . $amount . '</div>
      </div>
      <div class="cblock-bottom"><span>' . $date . '</span></div>
    </div>';



    $output .= $block;
  }
  dpm($output);

  return $output;
}













